;运算
;函数exact->inexact 用于把分数转换为浮点数。

;练习1
;使用Scheme解释器计算下列式子：

;1.(1+39) * (53-45)
(* (+ 1 39) (- 53 45))

;2.(1020 / 39) + (45 * 2)
(+ (/ 1020 39) (* 45 2))

;3.求和：39, 48, 72, 23, 91
(+ 39 48 72 23 91)

;4.求平均值：39, 48, 72, 23, 91（结果取为浮点数）
(exact->inexact (/ (+ 39 48 72 23 91) 5))

;函数quotient用于求商数（quotient）
;函数remainder和modulo用于求余数（remainder）
;函数sqrt用于求参数的平方根（square root）

;数学上的三角函数，诸如sin，cos，tan，asin，acos和atan都可以在Scheme中使用。
;atan接受1个或2个参数。如果期望atan的结果是1/2 π，就使用第二个参数指明使用弧度制。
;指数通过exp函数运算，对数通过log函数运算。a的b次幂可以通过(expt a b)来计算。

;练习2
;使用Scheme解释器求解下列式子：

;1.圆周率π
(* 4 (atan 1))

;2.exp(2/3)
(exp (/ 2 3))

;3.3的4次幂
(expt 3 4)

;4.1000的对数
(log 1000)


;生成表
;???事实上，表可以像下面这样递归地定义：
;1.‘()是一个表
;2.如果ls是一个表且obj是某种类型的数据，那么(cons obj ls)也是一个表 正因为表是一种被递归定义的数据结构，将它用在递归的函数中显然是合理的。

;不使用Cons单元的数据结构称为原子（atom）。
;数字，字符，字符串，向量和空表’()都是原子。’()既是原子，又是表。

;练习1
;使用cons来构建在前端表现为如下形式的数据结构。

;1.("hi" . "everybody")
(cons "hi" "everybody")

;2.(0)
(cons 0 '())

;3.(1 10 . 100)
(cons 1 (cons 10 100))

;4.(1 10 100)
(cons 1 (cons 10 cons(100 '())))

;5.(#\I "saw" 3 "girls")
(cons #\I (cons "saw" (cons 3 (cons "girls" '()))))

;6.("Sum of" (1 2 3 4) "is" 10)
(cons "Sun of" (cons (cons 1 (cons 2 (cons 3 (cons 4 '())))) (cons "is" (cons 10 '()))))
; 画图解决

;练习2
;求值下列S-表达式。

(car '(0))
;]=> 0

(cdr '(0))
;]=> ()

(car '((1 2 3) (4 5 6)))
;]=> (1 2 3)

(cdr '(1 2 3 . 4))
;]=> (2 3 . 4)

(cdr (cons 3 (cons 2 (cons 1 '()))))
;]=> (2 1)

;定义函数











